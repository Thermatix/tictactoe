<% url = TicTacToe::Application.routes.url_helpers %>
var currentP = ''
var winningCombo = [
	["1.1","1.2","1.3"],
	["2.1","2.2","2.3"],
	["3.1","3.2","3.3"],

	["1.1","2.1","3.1"],
	["1.2","2.2","3.2"],
	["1.3","2.3","3.3"],

	["1.1","2.2","3.3"],
	["1.3","2.2","3.1"]
]

function checkForWin (grid) {
	var notEmptyCount = 0
	for(var i=0;i<winningCombo.length;i++){
		var combination = winningCombo[i]
		var pos = [0,0]
		var c1 =''
		var c2 = ''
		var c3 = ''
		pos = combination[0].split('.')

		c1 = grid[pos[0]][pos[1]]
		if(c1 !== 'e') notEmptyCount++
	  pos = combination[1].split('.')
		c2 = grid[pos[0]][pos[1]]
		if(c2 !== 'e') notEmptyCount++
	  pos = combination[2].split('.')
		c3 = grid[pos[0]][pos[1]]
		if(c3 !== 'e') notEmptyCount++

		if ((c1 !== 'e') && (c2 !== 'e')){
			if(c1 == c2 ){
				if(c3 !== 'e'){
					if(c2 == c3){
						winnerIS(c1)
						break
					}
				}
			}
		}

		if(notEmptyCount == 24 ){
			winnerIS('draw')
			break
		}

	}

}
function winnerIS(winner){
	if(winner !== 'draw'){
			console.log(winner)
			alert('Winner is ' + winner + '!')
			getNewGame()
		}else{
			alert('You have Drawn!')
			getNewGame()
		}

}
function getNewGame (){
	$.post("<%= url.create_grid_path %>",null,null,'script')
}

function currentPlayer() {
	var ret = ''
	switch(currentP){
		case('X'):
		ret = 'X'
		currentP = 'O'
		break
		case('O'):
		ret = 'O'
		currentP = 'X'
		break
	}
	return ret
}

function addListenersTo () {
	$(document).on('click',function(e){
		var target = $(e.target)
		if(target.attr('id') == 'cell'){
				var pos = target.attr('data-location').split('.')
				var data = {collum: pos[0], row: pos[1],player:currentPlayer()}
				$.ajax({
					url: "<%=url.update_grid_path(format: :js)%>",
					type: 'PUT',
					data: data,
					dataType: 'script'
				})
		}
		return false
	})
}

function setUpGrid(){
	currentP = 'X'
	cells = $('#cell')
	addListenersTo()
}

$(document).on('page:change', setUpGrid)